AWSTemplateFormatVersion: 2010-09-09
Description: (SOCA) - Manage security stack.
Parameters:
  VpcId:
    Type: String

  ClientIp:
    Type: String

  ClusterId:
    Type: String

  S3InstallBucket:
    Type: String

  S3InstallFolder:
    Type: String

Resources:
  # Begin IAM
  ComputeNodeIAMRole:
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W11
            reason: "* is reduced to minimal pattern"
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - !Sub "ec2.${AWS::URLSuffix}"
                - !Sub "ssm.${AWS::URLSuffix}"
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore # Support for SSM
        - arn:aws:iam::aws:policy/CloudWatchAgentServerPolicy # Support for CloudWatch Agent
      Policies:
        - PolicyName: ComputeNodePermissions
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:ListBucket
                Resource:
                  - !Join [ "", [ "arn:", !Ref "AWS::Partition", ":s3:::dcv-license.", !Ref "AWS::Region", "/*"] ]
                  - !Join [ "", [ "arn:", !Ref "AWS::Partition", ":s3:::ec2-linux-nvidia-drivers", "/*"] ]
                  - !Join [ "", [ "arn:", !Ref "AWS::Partition", ":s3:::ec2-linux-nvidia-drivers"] ]

              - Effect: Allow
                Action:
                  -  ses:SendEmail
                Resource:
                  - !Join [ "", [ "arn:", !Ref "AWS::Partition", ":ses:*:", !Ref  "AWS::AccountId", ":identity*"] ]

              - Effect: Allow
                Action:
                  - ec2:CreateTags
                Resource:
                  - !Sub "arn:${AWS::Partition}:ec2:*:${AWS::AccountId}:volume/*"
                  - !Sub "arn:${AWS::Partition}:ec2:*:${AWS::AccountId}:network-interface/*"

              - Effect: Allow
                Action:
                  - ec2:DescribeVolumes
                  - ec2:DescribeNetworkInterfaces
                  - fsx:CreateDataRepositoryTask
                  - fsx:DescribeFileSystems # For FSX
                  - tag:GetResources # For FSX detection
                  - tag:GetTagValues # For FSX detection
                  - tag:GetTagKeys # For FSX detection
                Resource: "*"

  ComputeNodeInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
        - !Ref ComputeNodeIAMRole
      #InstanceProfileName: !Sub ${ClusterId}-ComputeNodeInstanceProfile

  SpotFleetIAMRole:
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W11
            reason: "* is reduced to minimal pattern"
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - !Sub "spotfleet.${AWS::URLSuffix}"
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: SpotFleetPermissions
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - ec2:DescribeImages
                  - ec2:DescribeSubnets
                  - ec2:DescribeInstanceStatus
                Resource: "*"
              - Effect: Allow
                Action:
                  - ec2:RequestSpotInstances
                  - ec2:TerminateInstances
                  - ec2:CreateTags
                Resource:
                  - !Sub "arn:${AWS::Partition}:ec2:*:${AWS::AccountId}:instance/*"
                Condition:
                  "ForAllValues:ArnEqualsIfExists":
                      "ec2:Vpc": !Sub "arn:${AWS::Partition}:ec2:${AWS::Region}:*:vpc/${VpcId}"
              - Effect: Allow
                Action:
                  - iam:PassRole
                Resource:
                  - !GetAtt ComputeNodeIAMRole.Arn
                Condition:
                  "StringEquals":
                      "iam:PassedToService": ["ec2.amazonaws.com", "ec2.amazonaws.com.cn"]

  SchedulerIAMRole:
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W11
            reason: "API calls are read commands which have to be mapped to wildcard resources"
          - id: W76
            reason: "Stelligent Policy Complexity Metric (SPCM) already reduced to minimum"
    Type: AWS::IAM::Role
    DependsOn: ComputeNodeIAMRole
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - !Sub "ec2.${AWS::URLSuffix}"
                - !Sub "ssm.${AWS::URLSuffix}"
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore # Support for SSM
        - arn:aws:iam::aws:policy/CloudWatchAgentServerPolicy # Support for CloudWatch Agent
        - arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess # Support for DynamoDB
        - arn:aws:iam::aws:policy/AmazonSNSFullAccess # Support for SNS
      Policies:
        - PolicyName: SchedulerReadPermissions
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - pricing:GetProducts
                  - budgets:ViewBudget
                  - ec2:DescribeInstances
                  - ec2:DescribeSubnets
                  - ec2:DescribeSecurityGroups
                  - ec2:DescribeImages
                  - ec2:DescribeInstanceAttribute
                  - ec2:DescribeInstanceTypes
                  - ec2:DescribeInstanceStatus
                  - ec2:DescribeReservedInstances
                  - ec2:DescribeSpotInstanceRequests
                  - ec2:DescribeVpcClassicLink
                  - ec2:DescribeVolumes
                  - ec2:DescribePlacementGroups
                  - ec2:DescribeKeyPairs
                  - ec2:DescribeLaunchTemplates
                  - ec2:DescribeLaunchTemplateVersions
                  - ec2:DescribeNetworkInterfaces
                  - ec2:DescribeSpotFleetRequests
                  - ec2:DescribeSpotFleetInstances
                  - fsx:DescribeFileSystems
                  - autoscaling:DescribeAutoScalingGroups
                  - autoscaling:DescribeScalingActivities
                  - autoscaling:DescribeLaunchConfigurations
                  - elasticloadbalancing:DescribeRules
                  - elasticloadbalancing:DescribeListeners
                  - elasticloadbalancing:DescribeTargetGroups
                  - savingsplans:DescribeSavingsPlans
                  - servicequotas:ListServiceQuotas
                  - ssm:ListDocuments
                  - ssm:ListDocumentVersions
                  - ssm:DescribeDocument
                  - ssm:GetDocument
                  - ssm:DescribeInstanceInformation
                  - ssm:DescribeDocumentParameters
                  - ssm:DescribeInstanceProperties
                  - ssm:ListCommands
                  - ssm:GetCommandInvocation
                  - ssm:DescribeAutomationExecutions
                Resource: "*"

        - PolicyName: SchedulerWritePermissions
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - autoscaling:UpdateAutoScalingGroup
                  - autoscaling:DeleteAutoScalingGroup
                  - autoscaling:CreateAutoScalingGroup
                  - autoscaling:DetachInstances
                  - ec2:DeleteLaunchTemplate
                  - ec2:CreateLaunchTemplate
                  - fsx:CreateDataRepositoryTask
                Resource: "*"
                Condition:
                  StringLikeIfExists:
                    "autoscaling:LaunchConfigurationName": !Sub "${ClusterId}*"

              - Effect: Allow
                Action:
                  - ec2:CreateTags
                Resource:
                  - !Sub "arn:${AWS::Partition}:ec2:*:${AWS::AccountId}:volume/*"
                  - !Sub "arn:${AWS::Partition}:ec2:*:${AWS::AccountId}:network-interface/*"
                  - !Sub "arn:${AWS::Partition}:ec2:*:${AWS::AccountId}:instance/*"

              - Effect: Allow
                Action:
                  - cloudformation:CreateStack
                  - cloudformation:DeleteStack
                  - cloudformation:DescribeStacks
                Resource: "*"
                Condition:
                  "ForAllValues:StringEquals":
                    "cloudformation:TemplateURL": !Sub "https://s3.{AWS::URLSuffix}/${S3InstallBucket}/${S3InstallFolder}/templates/ComputeNode.template"

              - Effect: Allow
                Action:
                  - ec2:RunInstances
                  - ec2:StopInstances
                  - ec2:StartInstances
                  - ec2:TerminateInstances
                  - ec2:CreatePlacementGroup
                  - ec2:DeletePlacementGroup
                  - ec2:ModifyInstanceAttribute
                Resource:
                  - !Sub "arn:${AWS::Partition}:ec2:*:*:subnet/*"
                  - !Sub "arn:${AWS::Partition}:ec2:*:${AWS::AccountId}:key-pair/*"
                  - !Sub "arn:${AWS::Partition}:ec2:*:${AWS::AccountId}:instance/*"
                  - !Sub "arn:${AWS::Partition}:ec2:*::snapshot/*"
                  - !Sub "arn:${AWS::Partition}:ec2:*:${AWS::AccountId}:launch-template/*"
                  - !Sub "arn:${AWS::Partition}:ec2:*:${AWS::AccountId}:volume/*"
                  - !Sub "arn:${AWS::Partition}:ec2:*:${AWS::AccountId}:security-group/*"
                  - !Sub "arn:${AWS::Partition}:ec2:*:${AWS::AccountId}:placement-group/*"
                  - !Sub "arn:${AWS::Partition}:ec2:*:${AWS::AccountId}:network-interface/*"
                  - !Sub "arn:${AWS::Partition}:ec2:*::image/*"
                Condition:
                  "ForAllValues:ArnEqualsIfExists":
                      "ec2:Vpc": !Sub "arn:${AWS::Partition}:ec2:${AWS::Region}:*:vpc/${VpcId}"

              - Effect: Allow
                Action:
                  - ssm:SendCommand
                Resource:
                  - !Sub "arn:${AWS::Partition}:ec2:${AWS::Region}:${AWS::AccountId}:instance/*"
                  - !Sub "arn:${AWS::Partition}:ssm:${AWS::Region}::document/AWS-RunPowerShellScript"
                  - !Sub "arn:${AWS::Partition}:ssm:${AWS::Region}::document/AWS-RunShellScript"

              - Effect: Allow
                Action:
                  - ssm:StartAutomationExecution
                Resource:
                  - !Join [ "", [ "arn:", !Ref "AWS::Partition", ":ssm:", ":::automation-definition/"] ]

              - Effect: Allow
                Action:
                  - ssm:StopAutomationExecution
                  - ssm:GetAutomationExecution
                Resource:
                  - !Join [ "", [ "arn:", !Ref "AWS::Partition", ":ssm:", ":::automation-execution/"] ]

              - Effect: Allow
                Action:
                  - lambda:InvokeFunction
                Resource:
                  - !Join [ "", [ "arn:", !Ref "AWS::Partition", ":lambda:", !Ref "AWS::Region", ":", !Ref  "AWS::AccountId", ":function:", !Ref ClusterId, "-Metrics"] ]

              - Effect: Allow
                Action:
                  - fsx:CreateFileSystem
                Resource:
                  - !Join [ "", [ "arn:", !Ref "AWS::Partition", ":fsx:", !Ref "AWS::Region", ":", !Ref  "AWS::AccountId", ":file-system/*"] ]

              - Effect: Allow
                Action:
                  - fsx:DeleteFileSystem
                Resource:
                  - !Join [ "", [ "arn:", !Ref "AWS::Partition", ":fsx:", !Ref "AWS::Region", ":", !Ref  "AWS::AccountId", ":file-system/*"] ]
                Condition:
                  "StringLike":
                    "aws:ResourceTag/soca:ClusterId": !Sub "${ClusterId}*"

              - Effect: Allow
                Action:
                  - iam:CreateServiceLinkedRole
                  - iam:AttachRolePolicy
                  - iam:PutRolePolicy
                Resource:
                  - !Join [ "", [ "arn:", !Ref "AWS::Partition", ":iam::", !Ref "AWS::AccountId", ":", "role/aws-service-role/s3.data-source.lustre.fsx.amazonaws.com/*"] ]
                  - !Join [ "", [ "arn:", !Ref "AWS::Partition", ":iam::", !Ref "AWS::AccountId", ":", "role/aws-service-role/autoscaling.amazonaws.com/*"] ]
                  - !Join [ "", [ "arn:", !Ref "AWS::Partition", ":iam::", !Ref "AWS::AccountId", ":", "role/aws-service-role/spotfleet.amazonaws.com/*"] ]
                  - !Join [ "", [ "arn:", !Ref "AWS::Partition", ":iam::", !Ref "AWS::AccountId", ":", "role/aws-service-role/fsx.amazonaws.com/*"] ]

              - Effect: Allow
                Action:
                  -  ses:SendEmail
                Resource:
                  - !Join [ "", [ "arn:", !Ref "AWS::Partition", ":ses:", !Ref "AWS::Region", ":", !Ref  "AWS::AccountId", ":identity*"] ]

              - Effect: Allow
                Action:
                  - ec2:CreatePlacementGroup
                  - ec2:DeletePlacementGroup
                  - ec2:RequestSpotFleet
                  - ec2:ModifySpotFleetRequest
                  - ec2:CancelSpotFleetRequests
                Resource: "*"
                Condition:
                  "ForAllValues:ArnEqualsIfExists":
                      "ec2:Vpc": !Sub "arn:${AWS::Partition}:ec2:${AWS::Region}:*:vpc/${VpcId}"

              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:ListBucket
                  - s3:PutObject
                Resource:
                  - !Join [ "", [ "arn:", !Ref "AWS::Partition", ":s3:::", !Ref S3InstallBucket , "/*" ] ]
                  - !Join [ "", [ "arn:", !Ref "AWS::Partition", ":s3:::", !Ref S3InstallBucket] ]

              - Effect: Allow
                Action:
                  - iam:PassRole
                  - iam:CreateServiceLinkedRole
                Resource:
                  - !GetAtt ComputeNodeIAMRole.Arn
                  - !GetAtt SpotFleetIAMRole.Arn
                Condition:
                  "ForAllValues:ArnEqualsIfExists":
                      "ec2:Vpc": !Sub "arn:${AWS::Partition}:ec2:${AWS::Region}:*:vpc/${VpcId}"

  SchedulerIAMInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
        - !Ref SchedulerIAMRole

  LambdaSolutionMetricRole:
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W11
            reason: "* is reduced to minimal pattern"
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: SolutionMetric
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                Resource: !Sub "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/${ClusterId}*"

              - Effect: Allow
                Action:
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                  - logs:DeleteLogStream
                Resource: !Sub "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/${ClusterId}*:log-stream:*"

  LambdaACMIAMRole:
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W11
            reason: "* is reduced to minimal pattern"
          - id: W28
            reason: "Name is required to easily identify resource deployed by SOCA"

    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - !Sub lambda.${AWS::URLSuffix}
            Action:
              - sts:AssumeRole

      Policies:
        - PolicyName: !Sub ${ClusterId}-LambdaACMIamRole-Policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                Resource: !Sub "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/${ClusterId}*"

              - Effect: Allow
                Action:
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: !Sub "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/${ClusterId}*:log-stream:*"

              - Effect: Allow
                Action:
                  - acm:ImportCertificate
                  - acm:ListCertificates
                  - acm:AddTagsToCertificate
                Resource: "*"

Outputs:
  SchedulerIAMRole:
    Value: !Ref SchedulerIAMRole
  SchedulerIAMRoleArn:
    Value: !GetAtt SchedulerIAMRole.Arn
  SpotFleetIAMRoleArn:
    Value: !GetAtt SpotFleetIAMRole.Arn
  SolutionMetricsRole:
    Value: !Ref LambdaSolutionMetricRole
  SolutionMetricsRoleArn:
    Value: !GetAtt LambdaSolutionMetricRole.Arn
  SchedulerIAMInstanceProfile:
    Value: !Ref SchedulerIAMInstanceProfile
  SchedulerIAMInstanceProfileArn:
    Value: !GetAtt SchedulerIAMInstanceProfile.Arn
  ComputeNodeIAMRole:
    Value: !Ref ComputeNodeIAMRole
  ComputeNodeIAMRoleArn:
    Value: !GetAtt ComputeNodeIAMRole.Arn
  ComputeNodeInstanceProfile:
    Value: !Ref ComputeNodeInstanceProfile
  ComputeNodeInstanceProfileArn:
    Value: !GetAtt ComputeNodeInstanceProfile.Arn
  LambdaACMIAMRoleArn:
    Value: !GetAtt LambdaACMIAMRole.Arn